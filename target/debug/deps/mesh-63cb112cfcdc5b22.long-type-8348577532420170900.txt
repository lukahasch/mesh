Result<(Source<'_>, Node<'_, ()>), nom::Err<<impl Parser<Source<'_>, Output = <Choice<(for<'a> fn(Source<'a>) -> Result<(Source<'a>, Node<'a, ()>), nom::Err<error::Error>> {list}, for<'a> fn(Source<'a>) -> Result<(Source<'a>, Node<'a, ()>), nom::Err<error::Error>> {boolean}, for<'a> fn(Source<'a>) -> Result<(Source<'a>, Node<'a, ()>), nom::Err<error::Error>> {string}, for<'a> fn(Source<'a>) -> Result<(Source<'a>, Node<'a, ()>), nom::Err<error::Error>> {parser::float}, for<'a> fn(Source<'a>) -> Result<(Source<'a>, Node<'a, ()>), nom::Err<error::Error>> {integer}, for<'a> fn(Source<'a>) -> Result<(Source<'a>, Node<'a, ()>), nom::Err<error::Error>> {variable})> as Parser<Source<'_>>>::Output> as Parser<Source<'_>>>::Error>>
